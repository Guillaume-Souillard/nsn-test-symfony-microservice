version: '3.8'

services:
  php:
    build: .
    container_name: symfony_php
    restart: always
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    depends_on:
      - database
    environment:
      DATABASE_HOST: database
      CONTAINER_ROLE: php  # ğŸ›‘ in order to execute entrypoint.sh for this container only

  nginx:
    image: nginx:latest
    container_name: symfony_nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  database:
    image: mysql:8.0
    container_name: symfony_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: microservice
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  database_test:
    image: mysql:8.0
    container_name: symfony_db_test
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: microservice_test
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3308:3306"
    volumes:
      - db_data_test:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:latest
    container_name: symfony_redis
    restart: always
    ports:
      - "6380:6379"

  messenger_worker:
    build: .
    container_name: symfony_messenger_worker
    restart: always
    working_dir: /var/www/html
    depends_on:
      - php
      - redis
    volumes:
      - .:/var/www/html
    environment:
      CONTAINER_ROLE: worker

  cronjob:
    build: .
    container_name: symfony_cron
    restart: always
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    depends_on:
      - php
    command: >
      sh -c "touch /var/log/cron.log &&
      echo '*/5 * * * * /usr/local/bin/php /var/www/html/bin/console app:fetch-all-crypto-prices >> /var/log/cron.log 2>&1' | crontab - &&
      cron -f"

volumes:
  db_data:
  db_data_test:
